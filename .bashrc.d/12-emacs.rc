#!/usr/bin/env bash

## source definitions
source $HOME/.bashrc.d/01-functions.rc

## shell editor context
export ALTERNATE_EDITOR="$HOME/.bin/emacs-start-service"
export EDITOR="$HOME/.bin/emacs"
export VISUAL="$HOME/.bin/emacs-lucid"

## systemd helper functions
emacsctl() {
    local verb service
    verb="$1" service="emacs"
    
    syscontrol "$verb" "$service"
}

emacs-dead-p() {
    emacsctl status | command grep -q "inactive (dead)"
}

emacs-running-p() {
     emacsctl status | command grep -q "active (running)"
}

## vterm
# https://github.com/akermu/emacs-libvterm#shell-side-configuration
vterm_printf() {
    if [ -n "$TMUX" ] && { [ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ]; }; then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

# https://github.com/akermu/emacs-libvterm#vterm-clear-scrollback
if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
    function clear() {
        vterm_printf "51;Evterm-clear-scrollback";
        tput clear;
    }
fi

# https://github.com/akermu/emacs-libvterm#vterm-buffer-name-string
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND; }"'echo -ne "\033]0;${HOSTNAME}:${PWD}\007"'

# https://github.com/akermu/emacs-libvterm#directory-tracking-and-prompt-tracking
vterm_prompt_end(){
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
}

PS1=$PS1'\[$(vterm_prompt_end)\]'

# https://github.com/akermu/emacs-libvterm#message-passing
vterm_cmd() {
    local vterm_elisp
    vterm_elisp=""
    while [ $# -gt 0 ]; do
        vterm_elisp="$vterm_elisp""$(printf '"%s" ' "$(printf "%s" "$1" | sed -e 's|\\|\\\\|g' -e 's|"|\\"|g')")"
        shift
    done
    vterm_printf "51;E$vterm_elisp"
}

# https://github.com/akermu/emacs-libvterm#shell-side-configuration-files
if [[ "$INSIDE_EMACS" = 'vterm' ]] \
    && [[ -n ${EMACS_VTERM_PATH} ]] \
    && [[ -f ${EMACS_VTERM_PATH}/etc/emacs-vterm-bash.sh ]]; then
	source ${EMACS_VTERM_PATH}/etc/emacs-vterm-bash.sh
fi
