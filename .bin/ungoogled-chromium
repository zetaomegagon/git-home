#!/usr/bin/env bash

##################################################################################
# Launch instances of ungoogled-chromium separated by HOME directories		 #
#										 #
# ungoogled-chromium <home-dir-name|cloudshare|incognito> <args>		 #
#										 #
# must be called with a DIRECTORY name as the first argument, but will		 #
# treat any first argument as a directory name so be careful. Upon launch	 #
# proceeds with these steps:							 #
#										 #
# 1. checks if the directory is called 'temp', and sets the $home var based on	 #
#    this									 #
# 2. checks if the home directory exists, creating it if it doesn't		 #
# 3a. based on the home directory name, calls ungoogled-chromium with a		 #
#     home directory in either the PARENT directory, under a SUB directory, or	 #
#     in /tmp with a unique name						 #
# 3b. if 'incognito' is passed as the name, launches ungoogled-chromium with the #
#     --incognito flag								 #
##################################################################################
ungoogled-chromium() {
    set -x
    local input=( $@ )
    local sdir=${input[0]}
    local args=( ${input[@]:1:${#input[@]}} )
    local pdir="$HOME/.ungoogled-chromium"
    local tdir="ungoogled-chromium-${sdir}"
    local home
    local flatpak="$(flatpak list --columns=application | grep -iE '^.*ungoogledchromium$')"
    local downloads="$HOME/Downloads"
    # limit the $PATH so we don't call this wrapper, and get path to binary
    local package="PATH='/usr/bin:/usr/local/bin' $(which ungoogled-chromium)"
    # chrome flags and switches
    # see:
    #  - https://chromium.googlesource.com/chromium/src/+/HEAD/chrome/browser/flag_descriptions.cc
    #  - https://github.com/ungoogled-software/ungoogled-chromium/blob/master/docs/flags.md
    local enable_flag_gpu=(
	GpuRasterization,
	CanvasOopRasterization,
	IgnoreGpuBlockList,
	ZeroCopy,
	VaapiVideoEncoder,
	RawDraw,
    )

    local enable_flag_extra_gpu=(
	Accelerated2dCanvas,
	UIEnableSharedImageCacheForGpu,
	UseGpuSchedulerDfs,
	EnableDrDc,
	ClientGmbInterface,
	Vp9kSVCHWDecoding,
	VaapiJpegImageDecodeAcceleration,
	VaapiWebPImageDecodeAcceleration,
	GainmapHdrImages,
	EnablePixelCanvasRecording,
    )

    local enable_flag_privacy=(
	FingerprintingCanvasImageDataNoise,
        FingerprintingCanvasMeasuretextNoise,
	FingerprintingClientRectsNoise,
        ForcePunycodeHostnames,
	DisableGreaseTLS,
	HttpAcceptHeader,
	NoPings,
    )
    
    local enable_flag_privacy_experimental=(
	PartitionedCookies,
	ThirdPartyStoragePartitioning,
	SplitCacheByNetworkIsolationKey,
    )
            
    local disable_flags=(
	DesktopPWAsRunOnOsLogin,
	WebAssemblyTrapHandler,
    )

    local switches=(
	--disable-features="$(printf "%s" "${disable_flags[@]}" $'\n')"
	--enable-features="$(printf "%s%s%s%s" "${enable_flag_gpu[@]}" "${enable_flag_gpu_extra[@]}" "${enable_flag_privacy[@]}" "${enable_flag_privacy_experimental[@]}" $'\n')"
	--omnibox-autocomplete-filtering=search-bookmarks-chrome
	--extension-mime-request-handling=always-prompt-for-install
	--disable-search-engine-collection
	--disable-gpu-driver-bug-workarounds
    )

    _set-home() {
	set -x
	case "$sdir" in
	    incognito|temp)
		local rand="$(openssl rand -hex 16)"
		home="/tmp/${tdir}-${rand}" ;;
	    *)
		home="${pdir}/${sdir}"
	esac
	set +x
    }

    _populate-home() {
	set -x
	if [[ ! -d "$home" && -e "${pdir}/template-${sdir}" ]]; then
	    cp -a ${pdir}/template-${sdir}/ "$home"
	else
	    cp -a ${pdir}/template-personal/ "$home"
	fi
	set +x
    }

    _ungoogled-chromium() {
	set -x
	local input=( $@ )
	if [[ -n "$flatpak" ]]; then
	    env HOME="$home" flatpak run \
		--filesystem="$downloads" \
		"$flatpak" \
		"${switches[@]}" \
		"${input[@]}"
	else
	    # what args need to be here to have distinct working directories?
	    "$package" "${input[@]}"
	fi
	set +x
    }

    _run-chromium() {
	set -x
	_set-home
	_populate-home
	case "$sdir" in
	    incognito)
		_ungoogled-chromium --incognito ${args[@]} ;;
	    *)
		_ungoogled-chromium ${args[@]}
	esac
	set +x
    }

    _run-chromium
    set +x
}

input=( $@ )
ungoogled-chromium ${input[@]}

